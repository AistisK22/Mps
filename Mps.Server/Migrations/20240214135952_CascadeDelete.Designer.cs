// <auto-generated />
using System;
using Mps.Server;
using Mps.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Mps.Server.Migrations
{
    [DbContext(typeof(MpsContext))]
    [Migration("20240214135952_CascadeDelete")]
    partial class CascadeDelete
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Mps.Server.Models.Allergen", b =>
                {
                    b.Property<int>("IdAllergen")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_Allergen");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAllergen"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.HasKey("IdAllergen")
                        .HasName("PK__Allergen__DD02E7A945371537");

                    b.ToTable("Allergens");
                });

            modelBuilder.Entity("Mps.Server.Models.Category", b =>
                {
                    b.Property<int>("IdCategory")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_Category");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCategory"));

                    b.Property<int?>("FkUseridUser")
                        .HasColumnType("int")
                        .HasColumnName("fk_Userid_User");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.HasKey("IdCategory")
                        .HasName("PK__Categori__5C2BE259A7F823E7");

                    b.HasIndex("FkUseridUser");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Mps.Server.Models.CategoryProduct", b =>
                {
                    b.Property<int>("FkCategoryidCategory")
                        .HasColumnType("int")
                        .HasColumnName("fk_Categoryid_Category");

                    b.Property<int>("FkProductidProduct")
                        .HasColumnType("int")
                        .HasColumnName("fk_Productid_Product");

                    b.HasKey("FkCategoryidCategory", "FkProductidProduct")
                        .HasName("PK__Category__82E5F49CC2BEFE78");

                    b.ToTable("CategoryProducts");
                });

            modelBuilder.Entity("Mps.Server.Models.Dish", b =>
                {
                    b.Property<int>("IdDish")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_Dish");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDish"));

                    b.Property<int>("FkRecipeidRecipe")
                        .HasColumnType("int")
                        .HasColumnName("fk_Recipeid_Recipe");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.Property<string>("Photo")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("photo");

                    b.HasKey("IdDish")
                        .HasName("PK__Dishes__5A70303A8DAE626F");

                    b.HasIndex("FkRecipeidRecipe");

                    b.ToTable("Dishes");
                });

            modelBuilder.Entity("Mps.Server.Models.Goal", b =>
                {
                    b.Property<int>("IdGoal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_Goal");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdGoal"));

                    b.Property<int>("FkUseridUser")
                        .HasColumnType("int")
                        .HasColumnName("fk_Userid_User");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.HasKey("IdGoal")
                        .HasName("PK__Goals__F196ED824FF8DD0D");

                    b.HasIndex("FkUseridUser");

                    b.ToTable("Goals");
                });

            modelBuilder.Entity("Mps.Server.Models.LikedCategory", b =>
                {
                    b.Property<int>("IdLikedCategory")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_LikedCategory");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdLikedCategory"));

                    b.Property<int>("FkCategoryidCategory")
                        .HasColumnType("int")
                        .HasColumnName("fk_Categoryid_Category");

                    b.Property<int>("FkUseridUser")
                        .HasColumnType("int")
                        .HasColumnName("fk_Userid_User");

                    b.Property<bool>("Liked")
                        .HasColumnType("bit")
                        .HasColumnName("liked");

                    b.HasKey("IdLikedCategory")
                        .HasName("PK__LikedCat__9D6D212F17294A20");

                    b.HasIndex("FkCategoryidCategory");

                    b.HasIndex("FkUseridUser");

                    b.ToTable("LikedCategories");
                });

            modelBuilder.Entity("Mps.Server.Models.NutritionPlan", b =>
                {
                    b.Property<int>("IdNutritionPlan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_NutritionPlan");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdNutritionPlan"));

                    b.Property<int>("FkNutritionPlanDayidNutritionPlanDay")
                        .HasColumnType("int")
                        .HasColumnName("fk_NutritionPlanDayid_NutritionPlanDay");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("description");

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date")
                        .HasColumnName("endDate");

                    b.Property<int>("FkUseridUser")
                        .HasColumnType("int")
                        .HasColumnName("fk_Userid_User");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date")
                        .HasColumnName("startDate");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("state")
                        .IsFixedLength();

                    b.HasKey("IdNutritionPlan", "FkNutritionPlanDayidNutritionPlanDay")
                        .HasName("PK__Nutritio__BE476DBACCB4256C");

                    b.HasIndex("FkUseridUser");

                    b.HasIndex(new[] { "FkNutritionPlanDayidNutritionPlanDay" }, "UQ__Nutritio__46DB910C979B2DA7")
                        .IsUnique();

                    b.ToTable("NutritionPlans");
                });

            modelBuilder.Entity("Mps.Server.Models.NutritionPlanDay", b =>
                {
                    b.Property<int>("IdNutritionPlanDay")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_NutritionPlanDay");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdNutritionPlanDay"));

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date")
                        .HasColumnName("date");

                    b.Property<int>("FkNutritionPlanDishTypeidNutritionPlanDishType")
                        .HasColumnType("int")
                        .HasColumnName("fk_NutritionPlanDishTypeid_NutritionPlanDishType");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.HasKey("IdNutritionPlanDay")
                        .HasName("PK__Nutritio__D90D55664AE38B8D");

                    b.HasIndex(new[] { "FkNutritionPlanDishTypeidNutritionPlanDishType" }, "UQ__Nutritio__246DAEA516C37BB2")
                        .IsUnique();

                    b.ToTable("NutritionPlanDays");
                });

            modelBuilder.Entity("Mps.Server.Models.NutritionPlanDish", b =>
                {
                    b.Property<int>("IdNutritionPlanDish")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_NutritionPlanDish");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdNutritionPlanDish"));

                    b.Property<bool>("Consumed")
                        .HasColumnType("bit")
                        .HasColumnName("consumed");

                    b.Property<int>("FkDishidDish")
                        .HasColumnType("int")
                        .HasColumnName("fk_Dishid_Dish");

                    b.Property<int>("FkNutritionPlanDishTypeidNutritionPlanDishType")
                        .HasColumnType("int")
                        .HasColumnName("fk_NutritionPlanDishTypeid_NutritionPlanDishType");

                    b.HasKey("IdNutritionPlanDish")
                        .HasName("PK__Nutritio__0998AA1AB129CD83");

                    b.HasIndex("FkDishidDish");

                    b.HasIndex("FkNutritionPlanDishTypeidNutritionPlanDishType");

                    b.ToTable("NutritionPlanDishes");
                });

            modelBuilder.Entity("Mps.Server.Models.NutritionPlanDishType", b =>
                {
                    b.Property<int>("IdNutritionPlanDishType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_NutritionPlanDishType");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdNutritionPlanDishType"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.HasKey("IdNutritionPlanDishType")
                        .HasName("PK__Nutritio__6A358E489917347E");

                    b.ToTable("NutritionPlanDishTypes");
                });

            modelBuilder.Entity("Mps.Server.Models.Product", b =>
                {
                    b.Property<int>("IdProduct")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_Product");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProduct"));

                    b.Property<int>("Calories")
                        .HasColumnType("int")
                        .HasColumnName("calories");

                    b.Property<int>("Carbohydrates")
                        .HasColumnType("int")
                        .HasColumnName("carbohydrates");

                    b.Property<DateOnly>("ExpirationUntil")
                        .HasColumnType("date")
                        .HasColumnName("expirationUntil");

                    b.Property<int>("Fat")
                        .HasColumnType("int")
                        .HasColumnName("fat");

                    b.Property<int>("FkUnitidUnit")
                        .HasColumnType("int")
                        .HasColumnName("fk_Unitid_Unit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.Property<string>("Note")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("note");

                    b.Property<int>("Protein")
                        .HasColumnType("int")
                        .HasColumnName("protein");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(8, 2)")
                        .HasColumnName("quantity");

                    b.HasKey("IdProduct")
                        .HasName("PK__Products__A828825DE3740BC0");

                    b.HasIndex("FkUnitidUnit");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Mps.Server.Models.Recipe", b =>
                {
                    b.Property<int>("IdRecipe")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_Recipe");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRecipe"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("description");

                    b.Property<int>("IdSpoonacular")
                        .HasColumnType("int")
                        .HasColumnName("id_Spoonacular");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("imageURL");

                    b.Property<int>("ReadyInMinutes")
                        .HasColumnType("int")
                        .HasColumnName("readyInMinutes");

                    b.Property<int>("Servings")
                        .HasColumnType("int")
                        .HasColumnName("servings");

                    b.Property<string>("SourceUrl")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("sourceURL");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("title");

                    b.HasKey("IdRecipe")
                        .HasName("PK__Recipes__CD60D0337B382B26");

                    b.ToTable("Recipes");
                });

            modelBuilder.Entity("Mps.Server.Models.RecipeProduct", b =>
                {
                    b.Property<int>("IdRecipeProduct")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_RecipeProduct");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRecipeProduct"));

                    b.Property<int>("FkRecipeidRecipe")
                        .HasColumnType("int")
                        .HasColumnName("fk_Recipeid_Recipe");

                    b.Property<int>("FkProductidProduct")
                        .HasColumnType("int")
                        .HasColumnName("fk_Productid_Product");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(8, 2)")
                        .HasColumnName("quantity");

                    b.HasKey("IdRecipeProduct", "FkRecipeidRecipe")
                        .HasName("PK__RecipePr__DD499F917BA8AE62");

                    b.HasIndex("FkProductidProduct");

                    b.HasIndex("FkRecipeidRecipe");

                    b.ToTable("RecipeProducts");
                });

            modelBuilder.Entity("Mps.Server.Models.ShoppingList", b =>
                {
                    b.Property<int>("IdShoppingList")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_ShoppingList");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdShoppingList"));

                    b.Property<int>("FkUseridUser")
                        .HasColumnType("int")
                        .HasColumnName("fk_Userid_User");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.Property<string>("Photo")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("photo");

                    b.HasKey("IdShoppingList")
                        .HasName("PK__Shopping__4E79835A53F4208A");

                    b.HasIndex("FkUseridUser");

                    b.ToTable("ShoppingLists");
                });

            modelBuilder.Entity("Mps.Server.Models.ShoppingListProduct", b =>
                {
                    b.Property<int>("FkShoppingListidShoppingList")
                        .HasColumnType("int")
                        .HasColumnName("fk_ShoppingListid_ShoppingList");

                    b.Property<int>("FkProductidProduct")
                        .HasColumnType("int")
                        .HasColumnName("fk_Productid_Product");

                    b.HasKey("FkShoppingListidShoppingList", "FkProductidProduct")
                        .HasName("PK__Shopping__4FA600FDA648A716");

                    b.ToTable("ShoppingListProducts");
                });

            modelBuilder.Entity("Mps.Server.Models.Unit", b =>
                {
                    b.Property<int>("IdUnit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_Unit");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUnit"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.HasKey("IdUnit")
                        .HasName("PK__Units__58221E1FD9EEBAFC");

                    b.ToTable("Units");
                });

            modelBuilder.Entity("Mps.Server.Models.User", b =>
                {
                    b.Property<int>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_User");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUser"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit")
                        .HasColumnName("active");

                    b.Property<DateOnly>("Birth")
                        .HasColumnType("date")
                        .HasColumnName("birth");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("email");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<decimal>("Height")
                        .HasColumnType("decimal(4, 1)")
                        .HasColumnName("height");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("password");

                    b.Property<int>("PhysicalActivityLevel")
                        .HasColumnType("int");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("role");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("surname");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(7, 3)")
                        .HasColumnName("weight");

                    b.HasKey("IdUser")
                        .HasName("PK__Users__556495566E6D9DF6");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("UserAllergen", b =>
                {
                    b.Property<int>("FkAllergenidAllergen")
                        .HasColumnType("int")
                        .HasColumnName("fk_Allergenid_Allergen");

                    b.Property<int>("FkUseridUser")
                        .HasColumnType("int")
                        .HasColumnName("fk_Userid_User");

                    b.HasKey("FkAllergenidAllergen", "FkUseridUser")
                        .HasName("PK__UserAlle__4DC1F71C4646DE15");

                    b.HasIndex("FkUseridUser");

                    b.ToTable("UserAllergens", (string)null);
                });

            modelBuilder.Entity("Mps.Server.Models.Category", b =>
                {
                    b.HasOne("Mps.Server.Models.User", "FkUseridUserNavigation")
                        .WithMany("Categories")
                        .HasForeignKey("FkUseridUser")
                        .HasConstraintName("creates1");

                    b.Navigation("FkUseridUserNavigation");
                });

            modelBuilder.Entity("Mps.Server.Models.CategoryProduct", b =>
                {
                    b.HasOne("Mps.Server.Models.Category", "FkCategoryidCategoryNavigation")
                        .WithMany("CategoryProducts")
                        .HasForeignKey("FkCategoryidCategory")
                        .IsRequired()
                        .HasConstraintName("has2");

                    b.Navigation("FkCategoryidCategoryNavigation");
                });

            modelBuilder.Entity("Mps.Server.Models.Dish", b =>
                {
                    b.HasOne("Mps.Server.Models.Recipe", "FkRecipeidRecipeNavigation")
                        .WithMany("Dishes")
                        .HasForeignKey("FkRecipeidRecipe")
                        .IsRequired()
                        .HasConstraintName("has1");

                    b.Navigation("FkRecipeidRecipeNavigation");
                });

            modelBuilder.Entity("Mps.Server.Models.Goal", b =>
                {
                    b.HasOne("Mps.Server.Models.User", "FkUseridUserNavigation")
                        .WithMany("Goals")
                        .HasForeignKey("FkUseridUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("marks");

                    b.Navigation("FkUseridUserNavigation");
                });

            modelBuilder.Entity("Mps.Server.Models.LikedCategory", b =>
                {
                    b.HasOne("Mps.Server.Models.Category", "FkCategoryidCategoryNavigation")
                        .WithMany("LikedCategories")
                        .HasForeignKey("FkCategoryidCategory")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("are1");

                    b.HasOne("Mps.Server.Models.User", "FkUseridUserNavigation")
                        .WithMany("LikedCategories")
                        .HasForeignKey("FkUseridUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("marks1");

                    b.Navigation("FkCategoryidCategoryNavigation");

                    b.Navigation("FkUseridUserNavigation");
                });

            modelBuilder.Entity("Mps.Server.Models.NutritionPlan", b =>
                {
                    b.HasOne("Mps.Server.Models.NutritionPlanDay", "FkNutritionPlanDayidNutritionPlanDayNavigation")
                        .WithOne("NutritionPlan")
                        .HasForeignKey("Mps.Server.Models.NutritionPlan", "FkNutritionPlanDayidNutritionPlanDay")
                        .IsRequired()
                        .HasConstraintName("FK__Nutrition__fk_Nu__2704CA5F");

                    b.HasOne("Mps.Server.Models.User", "FkUseridUserNavigation")
                        .WithMany("NutritionPlans")
                        .HasForeignKey("FkUseridUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("creates2");

                    b.Navigation("FkNutritionPlanDayidNutritionPlanDayNavigation");

                    b.Navigation("FkUseridUserNavigation");
                });

            modelBuilder.Entity("Mps.Server.Models.NutritionPlanDay", b =>
                {
                    b.HasOne("Mps.Server.Models.NutritionPlanDishType", "FkNutritionPlanDishTypeidNutritionPlanDishTypeNavigation")
                        .WithOne("NutritionPlanDay")
                        .HasForeignKey("Mps.Server.Models.NutritionPlanDay", "FkNutritionPlanDishTypeidNutritionPlanDishType")
                        .IsRequired()
                        .HasConstraintName("FK__Nutrition__fk_Nu__11158940");

                    b.Navigation("FkNutritionPlanDishTypeidNutritionPlanDishTypeNavigation");
                });

            modelBuilder.Entity("Mps.Server.Models.NutritionPlanDish", b =>
                {
                    b.HasOne("Mps.Server.Models.Dish", "FkDishidDishNavigation")
                        .WithMany("NutritionPlanDishes")
                        .HasForeignKey("FkDishidDish")
                        .IsRequired()
                        .HasConstraintName("cre");

                    b.HasOne("Mps.Server.Models.NutritionPlanDishType", "FkNutritionPlanDishTypeidNutritionPlanDishTypeNavigation")
                        .WithMany("NutritionPlanDishes")
                        .HasForeignKey("FkNutritionPlanDishTypeidNutritionPlanDishType")
                        .IsRequired()
                        .HasConstraintName("FK__Nutrition__fk_Nu__2057CCD0");

                    b.Navigation("FkDishidDishNavigation");

                    b.Navigation("FkNutritionPlanDishTypeidNutritionPlanDishTypeNavigation");
                });

            modelBuilder.Entity("Mps.Server.Models.Product", b =>
                {
                    b.HasOne("Mps.Server.Models.Unit", "FkUnitidUnitNavigation")
                        .WithMany("Products")
                        .HasForeignKey("FkUnitidUnit")
                        .IsRequired()
                        .HasConstraintName("hasa");

                    b.Navigation("FkUnitidUnitNavigation");
                });

            modelBuilder.Entity("Mps.Server.Models.RecipeProduct", b =>
                {
                    b.HasOne("Mps.Server.Models.Product", "FkProductidProductNavigation")
                        .WithMany("RecipeProducts")
                        .HasForeignKey("FkProductidProduct")
                        .IsRequired()
                        .HasConstraintName("are");

                    b.HasOne("Mps.Server.Models.Recipe", "FkRecipeidRecipeNavigation")
                        .WithMany("RecipeProducts")
                        .HasForeignKey("FkRecipeidRecipe")
                        .IsRequired()
                        .HasConstraintName("FK__RecipePro__fk_Re__29E1370A");

                    b.Navigation("FkProductidProductNavigation");

                    b.Navigation("FkRecipeidRecipeNavigation");
                });

            modelBuilder.Entity("Mps.Server.Models.ShoppingList", b =>
                {
                    b.HasOne("Mps.Server.Models.User", "FkUseridUserNavigation")
                        .WithMany("ShoppingLists")
                        .HasForeignKey("FkUseridUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("creates");

                    b.Navigation("FkUseridUserNavigation");
                });

            modelBuilder.Entity("Mps.Server.Models.ShoppingListProduct", b =>
                {
                    b.HasOne("Mps.Server.Models.ShoppingList", "FkShoppingListidShoppingListNavigation")
                        .WithMany("ShoppingListProducts")
                        .HasForeignKey("FkShoppingListidShoppingList")
                        .IsRequired()
                        .HasConstraintName("made");

                    b.Navigation("FkShoppingListidShoppingListNavigation");
                });

            modelBuilder.Entity("UserAllergen", b =>
                {
                    b.HasOne("Mps.Server.Models.Allergen", null)
                        .WithMany()
                        .HasForeignKey("FkAllergenidAllergen")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__UserAller__fk_Al__19AACF41");

                    b.HasOne("Mps.Server.Models.User", null)
                        .WithMany()
                        .HasForeignKey("FkUseridUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__UserAller__fk_Us__1A9EF37A");
                });

            modelBuilder.Entity("Mps.Server.Models.Category", b =>
                {
                    b.Navigation("CategoryProducts");

                    b.Navigation("LikedCategories");
                });

            modelBuilder.Entity("Mps.Server.Models.Dish", b =>
                {
                    b.Navigation("NutritionPlanDishes");
                });

            modelBuilder.Entity("Mps.Server.Models.NutritionPlanDay", b =>
                {
                    b.Navigation("NutritionPlan");
                });

            modelBuilder.Entity("Mps.Server.Models.NutritionPlanDishType", b =>
                {
                    b.Navigation("NutritionPlanDay");

                    b.Navigation("NutritionPlanDishes");
                });

            modelBuilder.Entity("Mps.Server.Models.Product", b =>
                {
                    b.Navigation("RecipeProducts");
                });

            modelBuilder.Entity("Mps.Server.Models.Recipe", b =>
                {
                    b.Navigation("Dishes");

                    b.Navigation("RecipeProducts");
                });

            modelBuilder.Entity("Mps.Server.Models.ShoppingList", b =>
                {
                    b.Navigation("ShoppingListProducts");
                });

            modelBuilder.Entity("Mps.Server.Models.Unit", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Mps.Server.Models.User", b =>
                {
                    b.Navigation("Categories");

                    b.Navigation("Goals");

                    b.Navigation("LikedCategories");

                    b.Navigation("NutritionPlans");

                    b.Navigation("ShoppingLists");
                });
#pragma warning restore 612, 618
        }
    }
}
